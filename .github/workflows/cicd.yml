name: CICD
on:
  push:
    branches:
      - main
    tags:
      - '*'
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/static-nginx-app
  IMAGE_TAG: ${{ github.run_number }}
  RELEASE_NAME: myapp
  NAMESPACE: monitoring

jobs:

  build:
    outputs:
      image_tag: ${{ env.IMAGE_TAG }}
    runs-on: ubuntu-latest

    steps:
    
    - name: Get files
      uses: actions/checkout@v3

    - name: Set env IMAGE_TAG
      id: step_tag
      run: echo "IMAGE_TAG=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV
      if: startsWith(github.ref, 'refs/tags/v')
      
    - name: Build the Docker image
      run: docker build . --file ./Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    
    - name: Push the Docker image
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build
    name: Deploy to Kubernetes
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'


#      - name: version from commit messages
#        run: |
#          COMMIT_MESSAGE=$(git log -1 --pretty=format%B)
#          if [[ "$COMMIT_MESSAGE" == v* ]]; then
#            echo "DEPLOY=true" >> $GITHUB_ENV
#          else 
#           echo "DEPLOY=false" >> $GITHUB_ENV
#          fi
 
      - name: Extract version from commit messages
        run: |
          VERSION=$(git log -1 --pretty=format:%B)
          if [[ ! -z "$VERSION" ]]; then
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No version found in the commit message"
            exit 1
          fi

      - name: Replace image tag in nginx-static-app.yaml
        if: env.DEPLOY == 'false'
       
        run: |
          sed -i "s|image: littlelucidlynx/nginx-static-app:.*|image: ${{ env.IMAGE_TAG }}|" ./nginx-static-app.yaml
        env:
          IMAGE_TAG: littlelucidlynx/nginx-static-app:${{ env.VERSION }}
      
      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube/
      - name: Authenticate to Kubernetes cluster
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 --decode > ${HOME}/.kube/config
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./nginx-static-app.yaml 
